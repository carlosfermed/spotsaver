

package spotsaver;

import java.awt.Color;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/*
 *
 * @author Carlos Fernández Medinilla
 */
public class PanelAlquilerPlaza extends javax.swing.JPanel {
    
    private int idParquingSeleccionado;
    private final int ARAGON_ID = 11;
    private final int DIAGONAL_ID = 15;
    private final int ARIBAU_ID = 19;
    private ButtonGroup grupoRadios;    
    
    public PanelAlquilerPlaza() {
        initComponents();
        
        grupoRadios = new ButtonGroup();
        
        grupoRadios.add(radioAragon);
        grupoRadios.add(radioDiagonal);
        grupoRadios.add(radioAribau);

    }
    
    public void pintarPkDisponibles() {
        
        try (Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost/bdspotsaver", "root", "");
             Statement stat = conexion.createStatement()) {

            // PK Aragón.
            String disponibilidadAragon = comprobarDisponibilidadPk(ARAGON_ID, stat);
            
            if (disponibilidadAragon.equalsIgnoreCase("true")) {
                radioAragon.setForeground(Color.BLACK);
                radioAragon.setEnabled(true);
            }
            else {
                radioAragon.setForeground(Color.red);
                radioAragon.setEnabled(false);
            }
            
            // PK Diagonal.
            String disponibilidadDiagonal = comprobarDisponibilidadPk(DIAGONAL_ID, stat);
            
            if (disponibilidadDiagonal.equalsIgnoreCase("true")) { 
                radioDiagonal.setForeground(Color.BLACK); 
                radioDiagonal.setEnabled(true);
            }
            else {
                radioDiagonal.setForeground(Color.red);
                radioDiagonal.setEnabled(false);
            }
            
            // PK Aribau.
            String disponibilidadAribau = comprobarDisponibilidadPk(ARIBAU_ID, stat);
            
            if (disponibilidadAribau.equalsIgnoreCase("true")) {
                radioAribau.setForeground(Color.BLACK);
                radioAribau.setEnabled(true);
            }
            else {
                radioAribau.setForeground(Color.red);
                radioAribau.setEnabled(false);
            }          
            
            grupoRadios.clearSelection();

        } catch (SQLException ex) {
            Logger.getLogger(PanelAlquilerPlaza.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private String comprobarDisponibilidadPk(final int id, final Statement stat) throws SQLException {
        String sql = "SELECT disponibilidad FROM parquings WHERE id = " + id;
        ResultSet resultado = stat.executeQuery(sql);
        String disponibilidad = null;
        if (resultado.next()) {
            disponibilidad = resultado.getString("disponibilidad");
        }
        return disponibilidad;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        txtfieldMatricula = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnRegistrar = new java.awt.Button();
        radioAragon = new javax.swing.JRadioButton();
        radioDiagonal = new javax.swing.JRadioButton();
        radioAribau = new javax.swing.JRadioButton();

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("ALQUILER DE PARQUING");

        txtfieldMatricula.setFont(new java.awt.Font("Segoe UI Symbol", 1, 24)); // NOI18N

        jLabel2.setText("Matrícula vehículo");

        jLabel3.setText("Elige la dirección");

        btnRegistrar.setBackground(new java.awt.Color(153, 204, 0));
        btnRegistrar.setForeground(new java.awt.Color(0, 0, 0));
        btnRegistrar.setLabel("Alquilar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        radioAragon.setText("Pk C/Aragón 11, Barcelona         14.90 Euros / día");

        radioDiagonal.setText("Pk Av Diagonal 304, Barcelona  17.90 Euros / día");

        radioAribau.setText("Pk C/Aribau 113, Barcelona        15.90 Euros / día");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtfieldMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioDiagonal)
                            .addComponent(radioAragon)
                            .addComponent(radioAribau)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel1)))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(7, 7, 7)
                .addComponent(radioAragon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioDiagonal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioAribau)
                .addGap(19, 19, 19)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtfieldMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(75, 75, 75))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
                
        if (radioAragon.isSelected()) {
            idParquingSeleccionado = ARAGON_ID;
        }
        else if (radioDiagonal.isSelected()){
            idParquingSeleccionado = DIAGONAL_ID;
        }
        else if (radioAribau.isSelected()){
            idParquingSeleccionado = ARIBAU_ID;            
        }
        
        // Expresión regular adaptada a matrícula nacional.
        String regex = "[0-9]{4}[A-Z]{3}";

        // Patrón de la expresión regular.
        Pattern pattern = Pattern.compile(regex);

        // Obtención de la mátricula introducida.
        String matricula = txtfieldMatricula.getText().toUpperCase();

        // Verificación del cumplimiento de patrón correcto.
        Matcher matcher = pattern.matcher(matricula);
        
        if (matcher.matches()) {
            
            if (idParquingSeleccionado == 0) {
                JOptionPane.showMessageDialog(null, "Debes seleccionar un pk\n");
            }
            else {

                try {
                    Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost/bdspotsaver", "root", "");
                    Statement stat = conexion.createStatement();
                    String insertarVehiculoSql = "INSERT INTO vehiculos (matricula, pkID, fechaentrada, estadoalquiler) VALUES ('" + txtfieldMatricula.getText().toUpperCase().trim() + "','" + idParquingSeleccionado + "','" + LocalDate.now() + "','pendiente')";
                    stat.executeUpdate(insertarVehiculoSql);
                    JOptionPane.showMessageDialog(null, "Reserva realizada con éxito para hoy día " + LocalDate.now() + ".\nRecibo generado (en carpeta raíz del proyecto).\n");
//                    txtfieldMatricula.setText("");
                    
                    String actualizarDisponibilidadSql = "UPDATE `parquings` SET `disponibilidad` = 'false' WHERE `id` = " + idParquingSeleccionado;
                    stat.executeUpdate(actualizarDisponibilidadSql);
                    this.pintarPkDisponibles();
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(PanelAlquilerPlaza.class.getName()).log(Level.SEVERE, null, ex);
                }

                try (BufferedWriter writer = new BufferedWriter(new FileWriter("ticket.html"))) {
                    writer.write("<html><head><title>Recibo</title><style>div {border: 1px solid green;border-radius:4px;padding:15px; width: 300px}</style></head><body>");
                    writer.write("<div><h1>Ticket</h1>");
                    writer.write("<p>Fecha de reserva: " + LocalDate.now() + "</p>");
                    writer.write("<p>Matrícula del vehículo: " + txtfieldMatricula.getText().toUpperCase() + "</p>");
                    writer.write("<p>Código del parquing: " + idParquingSeleccionado + "</p></div>");
                    writer.write("</body></html>");
                    
                    txtfieldMatricula.setText("");
                } catch (IOException e) {
                    e.printStackTrace();
                }            
            }             
        } else {
            JOptionPane.showMessageDialog(null, "El formato de matrícula no es correcto,\nel formato válido es: 1234ABC");
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnRegistrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton radioAragon;
    private javax.swing.JRadioButton radioAribau;
    private javax.swing.JRadioButton radioDiagonal;
    private javax.swing.JTextField txtfieldMatricula;
    // End of variables declaration//GEN-END:variables
}
